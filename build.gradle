plugins {
    id 'fabric-loom' version '0.11-SNAPSHOT'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

loom {
    accessWidenerPath = file("src/main/resources/dontdropit.accesswidener")
}

repositories {
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.terraformersmc.com/" }
    maven { url "https://maven.siphalor.de/" }
}

def depImpl(String id, boolean include = false) {
    def dep = dependencies.modImplementation (id) {
        exclude group: "net.fabricmc.fabric-api"
        exclude module: "fabric-loader"
    }
    if (include) {
        dependencies.include(dep)
    }

}

def depRuntimeOnly(String id) {
    dependencies.modRuntimeOnly(id) {
        exclude group: "net.fabricmc.fabric-api"
        exclude module: "fabric-loader"
    }
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.
    depImpl("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}", true)
    // Amecs API automatically brings in (a broken version of) NMUK, which we don't need
    include(modImplementation("de.siphalor:amecsapi-1.18:1+") {
        exclude group: "de.siphalor", module: "nmuk-1.18"
    })
    depImpl "com.terraformersmc:modmenu:${project.modmenu_version}"
}

if (Boolean.valueOf(project.use_runtime_deps)) {
    repositories {
        maven { url "https://jitpack.io" }
        maven {
            name = "Gegy's Maven"
            url = "https://maven.gegy.dev/"
        }
    }

    dependencies {
        // DataBreaker applies a number of patches to eliminate the loading of data fixers
        // This greatly reduces the amount of time needed to start the game, but is generally unsafe in production
        depRuntimeOnly "supercoder79:databreaker:${project.databreaker_version}"
        // JellySquid's elemental optimizations
        /* (DISABLED BECAUSE JITPACK SUCKS)
        depRuntime "com.github.jellysquid3:lithium-fabric:${project.lithium_version}"
        depRuntime "com.github.jellysquid3:phosphor-fabric:${project.phosphor_version}"
        depRuntime "com.github.jellysquid3:sodium-fabric:${project.sodium_version}"
         */
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}
